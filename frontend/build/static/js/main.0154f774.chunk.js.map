{"version":3,"sources":["constants/productConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","actions/userActions.js","components/SearchBox.js","components/Header.js","components/Footer.js","components/Rating.js","components/Product.js","components/Message.js","components/Loader.js","components/Paginate.js","actions/productActions.js","components/ProductCarousel.js","components/Meta.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","screens/CartScreen.js","components/FormContainer.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","screens/ShippingScreen.js","screens/PaymentScreen.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/UserListScreen.js","screens/UserEditScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_DETAILS_RESET","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_TOP_REQUEST","PRODUCT_TOP_SUCCESS","PRODUCT_TOP_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGIN_FAIL","USER_LOGOUT","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","CART_SAVE_SHIPPING_ADDRESS","CART_SAVE_PAYMENT_METHOD","CART_ADD_ITEM","CART_CLEAR_ITEMS","CART_REMOVE_ITEM","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_PAY_REQUEST","ORDER_PAY_SUCCESS","ORDER_PAY_FAIL","ORDER_PAY_RESET","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_DELIVER_REQUEST","ORDER_DELIVER_SUCCESS","ORDER_DELIVER_FAIL","ORDER_DELIVER_RESET","reducer","combineReducers","productList","state","products","action","type","constants","loading","payload","pages","page","error","productDetails","product","reviews","productDelete","success","productCreate","productUpdate","productReviewCreate","productTopRated","cart","cartItems","shippingAddress","item","existItem","find","x","map","filter","paymentMethod","userLogin","userInfo","userRegister","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","orderCreate","order","orderDetails","orderItems","orderPay","orderDeliver","orderListMy","orders","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","middleware","thunk","store","createStore","composeWithDevTools","applyMiddleware","getUserDetails","id","dispatch","getState","a","config","headers","Authorization","token","axios","get","data","response","message","SearchBox","history","useState","keyword","setKeyword","Form","onSubmit","e","preventDefault","trim","push","inline","Control","name","onChange","target","value","placeholder","className","Button","variant","Header","useSelector","useDispatch","Navbar","bg","expand","collapseOnSelect","Container","to","Brand","Toggle","aria-controls","Collapse","render","Nav","Link","NavDropdown","title","Item","onClick","removeItem","document","location","href","isAdmin","Footer","Row","Col","Rating","text","color","style","defaultProps","prototype","PropTypes","number","isRequired","string","Product","Card","_id","Img","src","image","Body","Title","Text","as","rating","numReviews","price","Message","children","Alert","Loader","Spinner","animation","role","width","height","margin","display","Paginate","Pagination","Array","keys","active","listProducts","pageNumber","listProductDetails","ProductCarousel","useEffect","Carousel","pause","Image","alt","fluid","Caption","Meta","description","keywords","Helmet","content","HomeScreen","match","params","sm","md","lg","xl","ProductScreen","qty","setQty","setRating","comment","setComment","errorProductReview","successProductReview","alert","ListGroup","countInStock","disabled","length","review","createdAt","substring","productId","post","Group","controlId","Label","row","addToCart","setItem","stringify","CartScreen","search","Number","split","removeFromCartHandler","removeFromCart","rounded","reduce","acc","toFixed","FormContainer","xs","LoginScreen","email","setEmail","password","setPassword","redirect","login","RegisterScreen","setName","confirmPassword","setConfirmPassword","setMessage","register","ProfileScreen","loadingOrders","errorOrders","put","updateUserProfile","Table","striped","bordered","hover","responsive","totalPrice","isPaid","paidAt","isDelivered","deliveredAt","CheckoutSteps","step1","step2","step3","step4","ShippingScreen","address","setAddress","city","setCity","postalCode","setPostalCode","country","setCountry","required","PaymentScreen","setPaymentMethod","Check","label","checked","PlaceOrderScreen","addDecimals","num","Math","round","itemsPrice","shippingPrice","taxPrice","index","createOrder","OrderScreen","orderId","sdkReady","setSdkReady","loadingPay","successPay","loadingDeliver","successDeliver","addPayPalScript","clientId","script","createElement","async","onload","body","appendChild","window","paypal","amount","onSuccess","paymentResult","console","log","payOrder","deliverOrder","UserListScreen","successDelete","deleteHandler","confirm","delete","deleteUser","stype","UserEditScreen","userId","setisAdmin","loadingUpdate","errorUpdate","successUpdate","updateUser","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","deleteProduct","category","brand","ProductEditScreen","setPrice","setImage","setBrand","setCategory","setCountInStock","setDescription","uploading","setUploading","uploadFileHandler","file","files","formData","FormData","append","updateProduct","File","custom","OrderListScreen","App","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.0154f774.chunk.js","sourcesContent":["//PRODUCTS\r\nexport const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\nexport const PRODUCT_DETAILS_RESET = 'PRODUCT_DETAILS_RESET';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';\r\n\r\n//USERS\r\nexport const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n\r\n//CART\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\r\n\r\nexport const CART_ADD_ITEM = 'CART_ADD_ITEM';\r\nexport const CART_CLEAR_ITEMS = 'CART_CLEAR_ITEMS';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\n\r\n//ORDERS\r\nexport const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_PAY_RESET';\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productDeleteReducer,\r\n  productCreateReducer,\r\n  productUpdateReducer,\r\n  productReviewCreateReducer,\r\n  productTopRatedReducer,\r\n} from './reducers/productReducers';\r\nimport { cartReducer } from './reducers/cartReducers';\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer,\r\n} from './reducers/userReducers';\r\nimport {\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderPayReducer,\r\n  orderDeliverReducer,\r\n  orderListMyReducer,\r\n  orderListReducer,\r\n} from './reducers/orderReducers';\r\n\r\n//THE REDUCER LIVES HERE\r\nconst reducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer, //admin\r\n  productDelete: productDeleteReducer, //admin\r\n  productCreate: productCreateReducer, //admin\r\n  productUpdate: productUpdateReducer, //admin\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productTopRated: productTopRatedReducer,\r\n  cart: cartReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer, //admin\r\n  userDelete: userDeleteReducer, //admin\r\n  userUpdate: userUpdateReducer, //admin\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  orderPay: orderPayReducer,\r\n  orderDeliver: orderDeliverReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderList: orderListReducer,\r\n});\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems')\r\n  ? JSON.parse(localStorage.getItem('cartItems'))\r\n  : [];\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo')\r\n  ? JSON.parse(localStorage.getItem('userInfo'))\r\n  : null; // we dont want to return an empty array or object\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress')\r\n  ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n  : {};\r\n\r\nconst initialState = {\r\n  cart: {\r\n    cartItems: cartItemsFromStorage,\r\n    shippingAddress: shippingAddressFromStorage,\r\n  },\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  reducer,\r\n  initialState,\r\n  composeWithDevTools(applyMiddleware(...middleware))\r\n);\r\n\r\nexport default store;\r\n","import * as constants from '../constants/productConstants';\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case constants.PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case constants.PRODUCT_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        products: action.payload.products,\r\n        pages: action.payload.pages,\r\n        page: action.payload.page,\r\n      }; //the reason we need payloads for each of products, pages and page is because that is what is being returned by the productController.\r\n    case constants.PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (\r\n  state = { product: { reviews: [] } },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case constants.PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case constants.PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case constants.PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case constants.PRODUCT_DETAILS_RESET:\r\n      return { product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case constants.PRODUCT_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case constants.PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case constants.PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case constants.PRODUCT_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case constants.PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case constants.PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case constants.PRODUCT_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case constants.PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case constants.PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case constants.PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case constants.PRODUCT_UPDATE_RESET:\r\n      return { product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case constants.PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true };\r\n    case constants.PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case constants.PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case constants.PRODUCT_CREATE_REVIEW_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productTopRatedReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case constants.PRODUCT_TOP_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case constants.PRODUCT_TOP_SUCCESS:\r\n      return { loading: false, products: action.payload };\r\n    case constants.PRODUCT_TOP_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as constants from '../constants/productConstants';\r\n\r\nexport const cartReducer = (\r\n  state = { cartItems: [], shippingAddress: {} },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case constants.CART_ADD_ITEM:\r\n      const item = action.payload; //the payload will contain a lot of information about the product. The Id in the payload will be called product, hence calling item.product will call the id of the product that's been sent with the payload.\r\n      const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n      if (existItem) {\r\n        //if existItem true\r\n        return {\r\n          ...state, //return and spread state so that we have everything already in the state\r\n          cartItems: state.cartItems.map(\r\n            (x) => (x.product === existItem.product ? item : x) //map through current cart items (which are x). If x.product equals existItem.product, return the new item, otherwise just return the current product (x)\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          //if existItem is false then push it into the array\r\n          ...state, //return and spread state so that we have everything already in the state\r\n          cartItems: [...state.cartItems, item], //array with current car items plus the new item\r\n        };\r\n      }\r\n    case constants.CART_REMOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        cartItems: state.cartItems.filter((x) => x.product !== action.payload),\r\n      };\r\n    case constants.CART_SAVE_SHIPPING_ADDRESS:\r\n      return {\r\n        ...state,\r\n        shippingAddress: action.payload,\r\n      };\r\n    case constants.CART_SAVE_PAYMENT_METHOD:\r\n      return {\r\n        ...state,\r\n        paymentMethod: action.payload,\r\n      };\r\n    case constants.CART_CLEAR_ITEMS: //this corrects an issue where users could see each other's orders\r\n      return {\r\n        ...state,\r\n        cartItems: [],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as constants from '../constants/productConstants';\r\n\r\n//Login a user\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case constants.USER_LOGIN_REQUEST:\r\n      return { loading: true };\r\n    case constants.USER_LOGIN_SUCCESS:\r\n      return { loading: false, userInfo: action.payload };\r\n    case constants.USER_LOGIN_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case constants.USER_LOGOUT:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//Register a new user\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case constants.USER_REGISTER_REQUEST:\r\n      return { loading: true };\r\n    case constants.USER_REGISTER_SUCCESS:\r\n      return { loading: false, userInfo: action.payload }; //userInfo in this case will pertain to the information provided by the user during registration.\r\n    case constants.USER_REGISTER_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//Create a profile screen with user detail information (name email etc)\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  //initial state is the user, but starts off as an empty object\r\n  switch (action.type) {\r\n    case constants.USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true }; //return whatever is in the initial state\r\n    case constants.USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case constants.USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case constants.USER_DETAILS_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//Update user details\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case constants.USER_UPDATE_PROFILE_REQUEST:\r\n      return { ...state, loading: true }; //return whatever is in the initial state\r\n    case constants.USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case constants.USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case constants.USER_UPDATE_PROFILE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//Get user list - admin only\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case constants.USER_LIST_REQUEST:\r\n      return { loading: true }; //return whatever is in the initial state\r\n    case constants.USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n    case constants.USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case constants.USER_LIST_RESET:\r\n      return { users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//Delete a user - admin only\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case constants.USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case constants.USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case constants.USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n//Update a user - admin only\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case constants.USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case constants.USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case constants.USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case constants.USER_UPDATE_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as constants from '../constants/productConstants';\r\n\r\nexport const orderCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case constants.ORDER_CREATE_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case constants.ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n        order: action.payload,\r\n      };\r\n    case constants.ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case constants.ORDER_CREATE_RESET: //this is part of the fix so that users don't see each others orders\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDetailsReducer = (\r\n  state = { loading: true, orderItems: [], shippingAddress: {} }, //loading set to true to avoid issues where it was trying to load the order before it went to true\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case constants.ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state, //this will keep us from getting errors when it loads\r\n        loading: true,\r\n      };\r\n    case constants.ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload,\r\n      };\r\n    case constants.ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPayReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case constants.ORDER_PAY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case constants.ORDER_PAY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case constants.ORDER_PAY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case constants.ORDER_PAY_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDeliverReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case constants.ORDER_DELIVER_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case constants.ORDER_DELIVER_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true,\r\n      };\r\n    case constants.ORDER_DELIVER_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    case constants.ORDER_DELIVER_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case constants.ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case constants.ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case constants.ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case constants.ORDER_LIST_REQUEST:\r\n      return {\r\n        loading: true,\r\n      };\r\n    case constants.ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload,\r\n      };\r\n    case constants.ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import * as constants from '../constants/productConstants';\r\nimport axios from 'axios';\r\n\r\n//ACTION FOR LOGGING IN\r\nexport const login = (email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: constants.USER_LOGIN_REQUEST,\r\n    });\r\n\r\n    //create a config object bc when we are sending data, we want to send a header with content type of application/json, and also pass in token for protected routes here.\r\n    const config = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n    //make our request\r\n    const { data } = await axios.post(\r\n      '/api/users/login',\r\n      { email, password },\r\n      config\r\n    );\r\n\r\n    //same process as with product list and details. dispatch the type and with the payload we send the data that we get back from the request.\r\n    //if we go to userController.js in the backend we see that we are hitting route /api/users/login and getting back id, name, email, isadmin and token\r\n    dispatch({\r\n      type: constants.USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.USER_LOGIN_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message //the second thing here is looking for the custom messages that we have made\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//ACTION FOR LOGGING OUT\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.removeItem('userInfo');\r\n  localStorage.removeItem('cartItems'); //\r\n  localStorage.removeItem('shippingAddress'); // these additions clear what is saved in localstorage so that users can't see orders from other users\r\n  localStorage.removeItem('paymentMethod'); //\r\n  dispatch({ type: constants.USER_LOGOUT });\r\n  dispatch({ type: constants.USER_LIST_RESET });\r\n  document.location.href = '/login'; //\r\n};\r\n\r\n//ACTION FOR REGISTERING A NEW USER\r\nexport const register = (name, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: constants.USER_REGISTER_REQUEST,\r\n    });\r\n\r\n    const config = {\r\n      'Content-Type': 'application/json',\r\n    };\r\n\r\n    const { data } = await axios.post(\r\n      '/api/users',\r\n      { name, email, password },\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: constants.USER_REGISTER_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    dispatch({\r\n      type: constants.USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.USER_REGISTER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//ACTION FOR BRINGING UP USER DETAILS\r\nexport const getUserDetails = (id) => async (dispatch, getState) => {\r\n  //we can get our user info from getState which has the token in it\r\n  try {\r\n    dispatch({\r\n      type: constants.USER_DETAILS_REQUEST,\r\n    });\r\n\r\n    //userInfo is created by userLoginReducer (in userReducers.js) which sets it to equal action.payload. Login in userActions.js dispatches USER.LOGIN.REQUEST which then leads to USER.LOGIN.SUCCESS with the payload.\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState(); //we put brackets here because we are destructuring from a function\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    //id might be profile (when we call it from the profile screen we pass in profile) or it might be id\r\n    const { data } = await axios.get(`/api/users/${id}`, config);\r\n\r\n    dispatch({\r\n      type: constants.USER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.USER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//ACTION FOR UPDATING USER DETAILS\r\nexport const updateUserProfile = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: constants.USER_UPDATE_PROFILE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/profile`, user, config);\r\n\r\n    dispatch({\r\n      type: constants.USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    //we dispatch this so that it logs back in straight away after updating the profile, so that the navbar updates with the new name (this is part of the fix)\r\n    dispatch({\r\n      type: constants.USER_LOGIN_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(data));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.USER_UPDATE_PROFILE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//ACTION FOR BRINGING UP A LIST OF USERS - ADMIN ONLY\r\nexport const listUsers = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: constants.USER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/users`, config);\r\n\r\n    dispatch({\r\n      type: constants.USER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n\r\n    /*localStorage.setItem('userInfo', JSON.stringify(data)); commented out because it was crashing the page after userDelete and then refresh of the page*/\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.USER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//ACTION FOR DELETING A USER - ADMIN ONLY\r\nexport const deleteUser = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: constants.USER_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/users/${id}`, config);\r\n\r\n    dispatch({ type: constants.USER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.USER_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//ACTION FOR UPDATING A USER - ADMIN ONLY\r\nexport const updateUser = (user) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: constants.USER_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(`/api/users/${user._id}`, user, config);\r\n\r\n    dispatch({ type: constants.USER_UPDATE_SUCCESS });\r\n    dispatch({ type: constants.USER_DETAILS_SUCCESS, payload: data }); //we also want detail success and pass the data of the updated user into user details. trickle down the state.\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.USER_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst SearchBox = ({ history }) => {\r\n  const [keyword, setKeyword] = useState('');\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (keyword.trim()) {\r\n      history.push(`/search/${keyword}`);\r\n    } else {\r\n      history.push(`/`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={submitHandler} inline>\r\n      <Form.Control\r\n        type='text'\r\n        name='q'\r\n        onChange={(e) => setKeyword(e.target.value)}\r\n        placeholder='Search Products...'\r\n        className='mr-sm-2 ml-sm-5'></Form.Control>\r\n      <Button type='submit' variant='outline-success' className='p-2'>\r\n        Search\r\n      </Button>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux'; //if you want to bring something in from the state it's useSelector, if you want to call an action it's useDispatch\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Navbar, Nav, Container, NavDropdown } from 'react-bootstrap';\r\nimport { logout } from '../actions/userActions';\r\nimport SearchBox from './SearchBox';\r\n\r\nconst Header = () => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  /* \r\nWe do this: <Route render={({ history }) => <SearchBox history={history} />} /> \r\nBecause: Because we embedded the SearchBox directly in the Header we don't have direct access to teh Router props like match and history. \r\nSo we bring in Route from react-router-dom, which gives us access to props.history. We pass that on to SearchBox which now has access to props.history. \r\n*/\r\n\r\n  return (\r\n    <header>\r\n      <Navbar bg='dark' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand>Proshop</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Route render={({ history }) => <SearchBox history={history} />} />\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-shopping-cart'></i> Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.name} id='username'>\r\n                  <LinkContainer to='/profile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>\r\n                    Logout\r\n                  </NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link>\r\n                    <i className='fas fa-user'></i> Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && userInfo.isAdmin && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <Container>\r\n        <Row>\r\n          <Col className='text-center py-3'>Copyright &copy; Proshop</Col>\r\n        </Row>\r\n      </Container>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 1\r\n              ? 'fas fa-star'\r\n              : value >= 0.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 2\r\n              ? 'fas fa-star'\r\n              : value >= 1.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 3\r\n              ? 'fas fa-star'\r\n              : value >= 2.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 4\r\n              ? 'fas fa-star'\r\n              : value >= 3.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>\r\n        <i\r\n          style={{ color }}\r\n          className={\r\n            value >= 5\r\n              ? 'fas fa-star'\r\n              : value >= 4.5\r\n              ? 'fas fa-star-half-alt'\r\n              : 'far fa-star'\r\n          }></i>\r\n      </span>\r\n      <span>{text && text}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nRating.defaultProps = {\r\n  color: 'orange',\r\n};\r\n\r\nRating.prototype = {\r\n  value: PropTypes.number.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n  color: PropTypes.string,\r\n};\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\n\r\nconst Product = ({ product }) => {\r\n  return (\r\n    <Card className='my-3 p-3 rounded'>\r\n      <Link to={`/product/${product._id}`}>\r\n        <Card.Img src={product.image} variant='top' />\r\n      </Link>\r\n      <Card.Body>\r\n        <Link to={`/product/${product._id}`}>\r\n          <Card.Title>\r\n            <strong>{product.name}</strong>\r\n          </Card.Title>\r\n        </Link>\r\n        <Card.Text as='div'>\r\n          <Rating\r\n            value={product.rating}\r\n            text={`${product.numReviews} reviews`}\r\n          />\r\n        </Card.Text>\r\n        <Card.Text as='h3'>${product.price}</Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return <Alert variant={variant}>{children}</Alert>;\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info',\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <Spinner\r\n      animation='border'\r\n      role='status'\r\n      style={{\r\n        width: '100px',\r\n        height: '100px',\r\n        margin: 'auto',\r\n        display: 'block',\r\n      }}>\r\n      <span className='sr-only'>Loading...</span>\r\n    </Spinner>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","//we don't call the page pagination because that's the react built in component.\r\nimport React from 'react';\r\nimport { Pagination } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst Paginate = ({ pages, page, isAdmin = false, keyword = '' }) => {\r\n  return (\r\n    pages > 1 && ( //we only do this if there is more than one page\r\n      //we need to take the number of pages and map through that as an array.\r\n      //we can use x + 1 for page numbers because this only gets called if there is more than one page. JS arrays are zero indexed so page one would be mapped as 0, page# would be 0 + 1 = 1.\r\n      //Page 2 would be mapped as 1, so 1 + 1 = 2. etc.\r\n      <Pagination>\r\n        {[...Array(pages).keys()].map((x) => (\r\n          <LinkContainer\r\n            key={x + 1}\r\n            to={\r\n              !isAdmin\r\n                ? keyword\r\n                  ? `/search/${keyword}/page/${x + 1}`\r\n                  : `/page/${x + 1}`\r\n                : `/admin/productlist/${x + 1}`\r\n            }>\r\n            <Pagination.Item active={x + 1 === page}>{x + 1}</Pagination.Item>\r\n          </LinkContainer>\r\n        ))}\r\n      </Pagination>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","import axios from 'axios';\r\nimport * as constants from '../constants/productConstants';\r\n\r\n/*this pretty much does what useEffect does. Fetch from api/products, get the data back and then map them\r\nyou can think of this as the action creator, and then LIST REQUEST for example is the action\r\nwe want to make an async request, so redux thunk allows us to add a function within a function, allowing us to pass in dispatch which then goes to the next function\r\nkeyword is passed in as default empty string so that the searchbar is empty*/\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (\r\n  dispatch\r\n) => {\r\n  try {\r\n    dispatch({ type: constants.PRODUCT_LIST_REQUEST });\r\n    const { data } = await axios.get(\r\n      `/api/products?keyword=${keyword}&pageNumber=${pageNumber}`\r\n    ); //we now hit products but with a query string attached that points to the keyword (which could even be empty) and the pageNumber. {Data} includes products, pages and page.\r\n    //So the reducer has to account for the extra data being passed through.\r\n    dispatch({\r\n      type: constants.PRODUCT_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.PRODUCT_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message //the second thing here is looking for the custom messages that we have made\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: constants.PRODUCT_DETAILS_REQUEST });\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n    dispatch({\r\n      type: constants.PRODUCT_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.PRODUCT_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message //the second thing here is looking for the custom messages that we have made\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//ACTION FOR DELETING A PRODUCT\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: constants.PRODUCT_DELETE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.delete(`/api/products/${id}`, config);\r\n\r\n    dispatch({\r\n      type: constants.PRODUCT_DELETE_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.PRODUCT_DELETE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//ACTION FOR CREATING A PRODUCT\r\nexport const createProduct = () => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: constants.PRODUCT_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/products`, {}, config); //empty object because we are making a post request but not adding any data (just creating a template product)\r\n\r\n    dispatch({\r\n      type: constants.PRODUCT_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.PRODUCT_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//ACTION FOR UPDATING A PRODUCT\r\nexport const updateProduct = (product) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: constants.PRODUCT_UPDATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/products/${product._id}`,\r\n      product,\r\n      config\r\n    ); //we pass on the product because we are making a put request to amend that product\r\n\r\n    dispatch({\r\n      type: constants.PRODUCT_UPDATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.PRODUCT_UPDATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//ACTION FOR CREATING A PRODUCT REVIEW\r\nexport const createProductReview = (productId, review) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: constants.PRODUCT_CREATE_REVIEW_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    await axios.post(`/api/products/${productId}/reviews`, review, config);\r\n\r\n    dispatch({\r\n      type: constants.PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//ACTION FOR LISTING TOP PRODUCTS\r\nexport const listTopProducts = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: constants.PRODUCT_TOP_REQUEST });\r\n    const { data } = await axios.get(`/api/products/top`);\r\n    dispatch({\r\n      type: constants.PRODUCT_TOP_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.PRODUCT_TOP_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Carousel, Image } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Loader from './Loader';\r\nimport Message from './Message';\r\nimport { listTopProducts } from '../actions/productActions';\r\n\r\nconst ProductCarousel = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productTopRated = useSelector((state) => state.productTopRated);\r\n  const { loading, error, products } = productTopRated;\r\n\r\n  useEffect(() => {\r\n    dispatch(listTopProducts());\r\n  }, [dispatch]);\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <Carousel pause='hover' className='bg-dark'>\r\n      {products.map((product) => (\r\n        <Carousel.Item key={product._id}>\r\n          <Link to={`/product/${product._id}`}>\r\n            <Image src={product.image} alt={product.name} fluid />\r\n            <Carousel.Caption className='carousel-caption'>\r\n              <h2>\r\n                {product.name} (${product.price})\r\n              </h2>\r\n            </Carousel.Caption>\r\n          </Link>\r\n        </Carousel.Item>\r\n      ))}\r\n    </Carousel>\r\n  );\r\n};\r\n\r\nexport default ProductCarousel;\r\n","import React from 'react';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nconst Meta = ({ title, description, keywords }) => {\r\n  return (\r\n    <Helmet>\r\n      <title>{title}</title>\r\n      <meta name='description' content={description} />\r\n      <meta name='keywords' content={keywords} />\r\n    </Helmet>\r\n  );\r\n};\r\n\r\nMeta.defaultProps = {\r\n  title: 'Welcome to Proshop',\r\n  description: 'We sell the best products for cheap',\r\n  keywords: 'electronics, buy electronics, cheap electronics',\r\n};\r\n\r\nexport default Meta;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col } from 'react-bootstrap';\r\nimport Product from '../components/Product';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nimport ProductCarousel from '../components/ProductCarousel';\r\nimport Meta from '../components/Meta';\r\nimport { listProducts } from '../actions/productActions';\r\n\r\n/* import axios from 'axios'; we did not need this here once we switched to redux since it's handled in the Actions*/\r\n/*this was all the stuff that was in Homescreen before the return value before we switched to using Redux.\r\n useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      const { data } = await axios.get('api/products');\r\n      setProducts(data);\r\n    };\r\n    fetchProducts();\r\n  }, []);\r\n  \r\n  products = what we want to call the state, setProducts = the function that we want to apply to the state. Empty array is the default for products.\r\n  const [products, setProducts] = useState([]);\r\n\r\n  1. setProducts sets the empy array in useState to the data returned by the axios.get request.\r\n  2. useEffect fires off when HomeScreen.js loads. \r\n  3. {data} = res.data. \r\n  4. https://scotch.io/tutorials/asynchronous-javascript-using-async-await offers a good tutorial on why you would use async-await instead of a promise (which would chain a .then with a resultant arrow function): tldr it leads to cleaner code\r\n  5. The second argument of useEffect is for an array of dependencies. If a dependency within the array changes it will trigger useEffect. If you don't have any dependencies then assign the second argument an empty array or else you will \r\n  get infinite get requests.\r\n  */\r\n\r\nconst HomeScreen = ({ match }) => {\r\n  const keyword = match.params.keyword; //get the keyword from the query params\r\n  const pageNumber = match.params.pageNumber || 1;\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts(keyword, pageNumber)); //keyword lists products according to what is in the keyword (could be nothing or could be a random word)\r\n  }, [dispatch, keyword, pageNumber]);\r\n\r\n  //we check for keyword in product carousel because we don't want the carousel showing up when doing a search. Keyword is an easy way to tell if there is a search happening.\r\n  //meta is using default props so no need to add anything in.\r\n  return (\r\n    <>\r\n      <Meta />\r\n      {!keyword ? (\r\n        <ProductCarousel />\r\n      ) : (\r\n        <Link to='/' className='btn btn-light'>\r\n          Go Back\r\n        </Link>\r\n      )}\r\n      <h1>Latest Products</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                <Product product={product} />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          <Paginate\r\n            pages={pages}\r\n            page={page}\r\n            keyword={keyword ? keyword : ''}\r\n          />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, Image, ListGroup, Button, Form } from 'react-bootstrap';\r\nimport Rating from '../components/Rating';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Meta from '../components/Meta';\r\nimport {\r\n  listProductDetails,\r\n  createProductReview,\r\n} from '../actions/productActions';\r\nimport * as constants from '../constants/productConstants';\r\n\r\n/* This was all used before we used redux\r\nimport axios from 'axios';\r\n\r\n1. Explainer for useState and useEffect can be found in HomeScreen.js\r\n2. Difference here is the useState default is set to an Object rather than an array because a single product is an object (cf products which is an array)\r\n3. The react-router-dom library passes in a prop called match (props.match) into every route that is rendered. Destructured here as { Match }\r\n4. Inside the Match object is another object called params. This holds all the params applying to product. The one we need is id, which would be longform typed as match.params.id.\r\n5. The route path in app.js to this Component is '/product/:id' - the :id is a placeholder and is reffered to when match.params.id is called\r\n\r\nconst [product, setProduct] = useState({});\r\n\r\n  useEffect(() => {\r\n    const fetchProduct = async () => {\r\n      const { data } = await axios.get(`/api/products/${match.params.id}`);\r\n      setProduct(data);\r\n    };\r\n    fetchProduct();\r\n  }, [match]);\r\n\r\n1. The following code was testing placeholder during construction of the react frontend.\r\n2. It has been replaced by useState and useEffect().  \r\n3. The code would bring up the correct product by running find() on products.\r\n4. With find() we are looking for the element of the array (called 'p' in this instance) with the ._id parameter (stored in the \"database\") which matches the match.params.id, which was provided to us by the Route (which is explained above).   \r\n          \r\n      const product = products.find((p) => p._id === match.params.id);\r\n\r\n*/\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(1);\r\n  const [comment, setComment] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const {\r\n    error: errorProductReview,\r\n    success: successProductReview,\r\n  } = productReviewCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (successProductReview) {\r\n      alert('Review Submitted 🌟');\r\n      setRating(0); //sets the rating back to 0 for the next review\r\n      setComment(''); //sets the comment to empty\r\n      dispatch({ type: constants.PRODUCT_CREATE_REVIEW_RESET });\r\n    }\r\n    dispatch(listProductDetails(match.params.id));\r\n  }, [match, dispatch, successProductReview]);\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createProductReview(match.params.id, {\r\n        rating,\r\n        comment,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Meta title={product.name} />\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image src={product.image} alt={product.name} fluid />\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h3>{product.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={product.rating}\r\n                    text={`${product.numReviews} reviews`}\r\n                  />\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>Price: ${product.price}</ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  Description: {product.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Price: </Col>\r\n                    <Col>\r\n                      <strong>${product.price}</strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Status: </Col>\r\n                    <Col>\r\n                      <strong>\r\n                        {product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}\r\n                      </strong>\r\n                    </Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                {product.countInStock > 0 && (\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Qty</Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={qty}\r\n                          onChange={(e) => setQty(e.target.value)}>\r\n                          {[...Array(product.countInStock).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                )}\r\n                <ListGroup.Item>\r\n                  <Button\r\n                    onClick={addToCartHandler}\r\n                    className='btn-block'\r\n                    type='button'\r\n                    disabled={product.countInStock === 0}>\r\n                    Add to Cart\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {product.reviews.map((review) => (\r\n                  <ListGroup.Item key={review._id}>\r\n                    <strong>{review.name}</strong>\r\n                    <Rating value={review.rating} />\r\n                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                    <p>{review.comment}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n                <ListGroup.Item>\r\n                  <h2>Write a Customer Review</h2>\r\n                  {errorProductReview && (\r\n                    <Message variant='danger'>{errorProductReview}</Message>\r\n                  )}\r\n                  {userInfo ? (\r\n                    <Form onSubmit={submitHandler}>\r\n                      <Form.Group controlId='rating'>\r\n                        <Form.Label>Rating</Form.Label>\r\n                        <Form.Control\r\n                          as='select'\r\n                          value={rating}\r\n                          onChange={(e) => setRating(e.target.value)}>\r\n                          <option value=''>Select...</option>\r\n                          <option value='1'>1 - Poor</option>\r\n                          <option value='2'>2 - Fair</option>\r\n                          <option value='3'>3 - Good</option>\r\n                          <option value='4'>4 - Very Good</option>\r\n                          <option value='5'>5 - Excellent</option>\r\n                        </Form.Control>\r\n                      </Form.Group>\r\n                      <Form.Group controlId='comment'>\r\n                        <Form.Label>Comment</Form.Label>\r\n                        <Form.Control\r\n                          as='textarea'\r\n                          row='3'\r\n                          value={comment}\r\n                          onChange={(e) =>\r\n                            setComment(e.target.value)\r\n                          }></Form.Control>\r\n                      </Form.Group>\r\n                      <Button type='submit' variant='primary'>\r\n                        Submit\r\n                      </Button>\r\n                    </Form>\r\n                  ) : (\r\n                    <Message>\r\n                      Please <Link to='/login'>sign in </Link>to write a review\r\n                      ✍\r\n                    </Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n      <Link className='btn- btn-primary my-4 p-2' to='/'>\r\n        Go Back\r\n      </Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import axios from 'axios';\r\nimport * as constants from '../constants/productConstants';\r\n\r\nexport const addToCart = (id, qty) => async (dispatch, getState) => {\r\n  const { data } = await axios.get(`/api/products/${id}`);\r\n  dispatch({\r\n    type: constants.CART_ADD_ITEM,\r\n    payload: {\r\n      product: data._id,\r\n      name: data.name,\r\n      image: data.image,\r\n      price: data.price,\r\n      countInStock: data.countInStock,\r\n      qty: qty,\r\n    },\r\n  });\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems)); //this saves the cart in local storage so that people can come back and buy later.\r\n  //getstate gives us a JS object so we want to stringify it, because we can only save strings in local storage.\r\n};\r\n\r\nexport const removeFromCart = (id) => (dispatch, getState) => {\r\n  dispatch({\r\n    type: constants.CART_REMOVE_ITEM,\r\n    payload: id,\r\n  });\r\n  localStorage.setItem('cartItems', JSON.stringify(getState().cart.cartItems));\r\n};\r\n\r\n//taking in form data, and dispatching the form data as the payload\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: constants.CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data,\r\n  });\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\n//taking paymentmethod in form data, and dispatching the form data as the payload\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: constants.CART_SAVE_PAYMENT_METHOD,\r\n    payload: data,\r\n  });\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  Row,\r\n  Col,\r\n  ListGroup,\r\n  Image,\r\n  Form,\r\n  Button,\r\n  Card,\r\n} from 'react-bootstrap';\r\nimport { addToCart, removeFromCart } from '../actions/cartActions';\r\nimport Message from '../components/Message';\r\n\r\nconst CartScreen = ({ match, location, history }) => {\r\n  //we need match.params.id to id our product so we destructure into {match}. We also need location bc we need the quantity and we get that through location.search. We also want history which is used to redirect.\r\n  const productId = match.params.id;\r\n  const qty = location.search ? Number(location.search.split('=')[1]) : 1; //console.log(qty) if you added one thing to cart would be ?qty=1.\r\n  //location.search.split will split the string at the = and then put each part into an array (?qty in [0], the nunmber in [1]). We use [1] to get the number because we want to know the quantity.\r\n  //We wrap it in a number because otherwise it will be returned as a string, and we want it as a number.\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    history.push('/login?redirect=shipping');\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={8}>\r\n        <h1>Shopping Cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <Message>\r\n            Your cart is empty, <Link to='/'>go back</Link>\r\n          </Message>\r\n        ) : (\r\n          <ListGroup variant='flush'>\r\n            {cartItems.map((item) => (\r\n              <ListGroup.Item key={item.product}>\r\n                <Row>\r\n                  <Col md={2}>\r\n                    <Image src={item.image} alt={item.name} fluid rounded />\r\n                  </Col>\r\n                  <Col md={3}>\r\n                    <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n                  </Col>\r\n                  <Col md={2}>${item.price}</Col>\r\n                  <Col md={2}>\r\n                    <Form.Control\r\n                      as='select'\r\n                      value={item.qty}\r\n                      onChange={(e) => {\r\n                        dispatch(\r\n                          addToCart(item.product, Number(e.target.value))\r\n                        );\r\n                        history.push('/cart');\r\n                      }}>\r\n                      {[...Array(item.countInStock).keys()].map((x) => (\r\n                        <option key={x + 1} value={x + 1}>\r\n                          {x + 1}\r\n                        </option>\r\n                      ))}\r\n                    </Form.Control>\r\n                  </Col>\r\n                  <Col md={2}>\r\n                    <Button\r\n                      type='button'\r\n                      variant='light'\r\n                      onClick={() => removeFromCartHandler(item.product)}>\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n            ))}\r\n          </ListGroup>\r\n        )}\r\n      </Col>\r\n      <Col md={4}>\r\n        <Card>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((acc, item) => acc + item.qty, 0)})\r\n                items\r\n              </h2>\r\n              $\r\n              {cartItems\r\n                .reduce((acc, item) => acc + item.qty * item.price, 0)\r\n                .toFixed(2)}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item>\r\n              <Button\r\n                type='button'\r\n                className='btn-block'\r\n                disabled={cartItems.length === 0}\r\n                onClick={checkoutHandler}>\r\n                Proceed to Checkout\r\n              </Button>\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card>\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\n//props.children. The form we create will go in the container as a child.\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { login } from '../actions/userActions';\r\n\r\nconst LoginScreen = ({ location, history }) => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin; //these are taken from our userReducer, where the different cases have the loading, error and userInfo value.\r\n  //error and userinfo are dispatched in the payload depending on whether the login was a success or fail.\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/'; //just so we have option to hand some kind of redirect\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  //we use e and then call e.preventDefault because it's submitting a form so we don't want the page to refresh\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(email, password));\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign In</h1>\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Sign In\r\n        </Button>\r\n      </Form>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          New Customer?{' '}\r\n          <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>\r\n            Register\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { register } from '../actions/userActions';\r\n\r\nconst RegisterScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  const { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = location.search ? location.search.split('=')[1] : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      history.push(redirect);\r\n    }\r\n  }, [history, userInfo, redirect]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match'); //setMessage fills message up above (useState), then we go down to under the h1 and see that it's being used in an error.\r\n    } else {\r\n      dispatch(register(name, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <h1>Sign Up</h1>\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      {error && <Message variant='danger'>{error}</Message>}\r\n      {loading && <Loader />}\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='name'>\r\n          <Form.Label>Name</Form.Label>\r\n          <Form.Control\r\n            type='name'\r\n            placeholder='enter name'\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='email'>\r\n          <Form.Label>Email Address</Form.Label>\r\n          <Form.Control\r\n            type='email'\r\n            placeholder='enter email'\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='password'>\r\n          <Form.Label>Password</Form.Label>\r\n          <Form.Control\r\n            type='password'\r\n            placeholder='enter password'\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='confirmPassword'>\r\n          <Form.Label>Confirm Password</Form.Label>\r\n          <Form.Control\r\n            type='Password'\r\n            placeholder='confirm password'\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Register\r\n        </Button>\r\n      </Form>\r\n      <Row className='py-3'>\r\n        <Col>\r\n          Have an account?{' '}\r\n          <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>\r\n            Login\r\n          </Link>\r\n        </Col>\r\n      </Row>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col, Table } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport { listMyOrders } from '../actions/orderActions';\r\nimport * as constants from '../constants/productConstants';\r\n\r\nconst ProfileScreen = ({ location, history }) => {\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { loading: loadingOrders, error: errorOrders, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      if (!user.name || success) {\r\n        dispatch({ type: constants.USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails('profile'));\r\n        dispatch(listMyOrders());\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user, success]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match'); //setMessage fills message up above (useState), then we go down to under the h1 and see that it's being used in an error.\r\n    } else {\r\n      dispatch(updateUserProfile({ id: user._id, name, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{error}</Message>}\r\n        {success && <Message variant='success'>Profile Updated!</Message>}\r\n        {loading && <Loader />}\r\n        <Form onSubmit={submitHandler}>\r\n          <Form.Group controlId='name'>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type='name'\r\n              placeholder='enter name'\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              type='email'\r\n              placeholder='enter email'\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='Password'\r\n              placeholder='confirm password'\r\n              value={confirmPassword}\r\n              onChange={(e) =>\r\n                setConfirmPassword(e.target.value)\r\n              }></Form.Control>\r\n          </Form.Group>\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {loadingOrders ? (\r\n          <Loader />\r\n        ) : errorOrders ? (\r\n          <Message variant='danger'>{errorOrders}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order._id}>\r\n                  <td>{order._id}</td>\r\n                  <td>{order.createdAt.substring(0, 10)}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>\r\n                    {order.isPaid ? (\r\n                      order.paidAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {order.isDelivered ? (\r\n                      order.deliveredAt.substring(0, 10)\r\n                    ) : (\r\n                      <i className='fas fa-times' style={{ color: 'red' }}></i>\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/orders/${order._id}`}>\r\n                      <Button variant='light'>Details</Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n\r\n//substring - we only want the first 10 chars in the string (the bit with the date, not the time)\r\n","import axios from 'axios';\r\nimport * as constants from '../constants/productConstants';\r\n\r\n//ACTION FOR CREATING AN ORDER\r\nexport const createOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: constants.ORDER_CREATE_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.post(`/api/orders`, order, config);\r\n\r\n    dispatch({\r\n      type: constants.ORDER_CREATE_SUCCESS,\r\n      payload: data,\r\n    });\r\n    dispatch({\r\n      //this corrects an issue where the state would pick up all orders made, and present all orders to each user.\r\n      type: constants.CART_CLEAR_ITEMS,\r\n      payload: data,\r\n    });\r\n    localStorage.removeItem('cartItems');\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.ORDER_CREATE_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//ACTION FOR GETTING THE DETIALS OF AN ORDER\r\nexport const getOrderDetails = (id) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: constants.ORDER_DETAILS_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/${id}`, config);\r\n\r\n    dispatch({\r\n      type: constants.ORDER_DETAILS_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.ORDER_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//ACTION FOR PAYING FOR AN ORDER\r\nexport const payOrder = (orderId, paymentResult) => async (\r\n  dispatch,\r\n  getState\r\n) => {\r\n  try {\r\n    dispatch({\r\n      type: constants.ORDER_PAY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${orderId}/pay`,\r\n      paymentResult,\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: constants.ORDER_PAY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.ORDER_PAY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//ACTION FOR MARKING AN ORDER AS DELIVERED\r\nexport const deliverOrder = (order) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: constants.ORDER_DELIVER_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.put(\r\n      `/api/orders/${order._id}/deliver`,\r\n      {},\r\n      config\r\n    );\r\n\r\n    dispatch({\r\n      type: constants.ORDER_DELIVER_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.ORDER_DELIVER_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//ACTION FOR A USER BRINGING UP THEIR ORDERS\r\nexport const listMyOrders = () => async (dispatch, getState) => {\r\n  //don't need to pass anything in here because it knows who we are by our token\r\n  try {\r\n    dispatch({\r\n      type: constants.ORDER_LIST_MY_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders/myorders`, config);\r\n\r\n    dispatch({\r\n      type: constants.ORDER_LIST_MY_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.ORDER_LIST_MY_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n\r\n//ACTION FOR A USER BRINGING UP ALL ORDERS\r\nexport const listOrders = () => async (dispatch, getState) => {\r\n  //don't need to pass anything in here because it knows who we are by our token\r\n  try {\r\n    dispatch({\r\n      type: constants.ORDER_LIST_REQUEST,\r\n    });\r\n\r\n    const {\r\n      userLogin: { userInfo },\r\n    } = getState();\r\n\r\n    const config = {\r\n      headers: {\r\n        Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    };\r\n\r\n    const { data } = await axios.get(`/api/orders`, config);\r\n\r\n    dispatch({\r\n      type: constants.ORDER_LIST_SUCCESS,\r\n      payload: data,\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: constants.ORDER_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\n//we are checking if steps have been passed in as a prop\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { saveShippingAddress } from '../actions/cartActions';\r\n\r\n//we destructure history because we want to redirect to our payment screen when we submit the form\r\nconst ShippingScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(saveShippingAddress({ address, city, postalCode, country }));\r\n    history.push('/payment');\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 />\r\n      <h1>Shipping</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group controlId='address'>\r\n          <Form.Label>Address</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='enter address'\r\n            value={address}\r\n            required\r\n            onChange={(e) => setAddress(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='city'>\r\n          <Form.Label>City</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='enter city'\r\n            value={city}\r\n            required\r\n            onChange={(e) => setCity(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='postalCode'>\r\n          <Form.Label>Postal Code</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='enter postal code'\r\n            value={postalCode}\r\n            required\r\n            onChange={(e) => setPostalCode(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n        <Form.Group controlId='country'>\r\n          <Form.Label>Country</Form.Label>\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='enter country'\r\n            value={country}\r\n            required\r\n            onChange={(e) => setCountry(e.target.value)}></Form.Control>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import React, { useState } from 'react';\r\nimport { Form, Button, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormContainer from '../components/FormContainer';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { savePaymentMethod } from '../actions/cartActions';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  //we want to redirect if no shipping address\r\n  if (!shippingAddress) {\r\n    history.push('/shipping');\r\n  }\r\n\r\n  const [paymentMethod, setPaymentMethod] = useState('PayPal');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    history.push('/placeorder');\r\n  };\r\n\r\n  return (\r\n    <FormContainer>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <h1>Payment Method</h1>\r\n      <Form onSubmit={submitHandler}>\r\n        <Form.Group>\r\n          <Form.Label as='legend'>Select Method</Form.Label>\r\n          <Col>\r\n            <Form.Check\r\n              type='radio'\r\n              label='PayPal or Credit Card'\r\n              id='PayPal'\r\n              name='paymentMethod'\r\n              value='PayPal'\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}></Form.Check>\r\n          </Col>\r\n        </Form.Group>\r\n        <Button type='submit' variant='primary'>\r\n          Continue\r\n        </Button>\r\n      </Form>\r\n    </FormContainer>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n\r\n/* \r\nIt would be easy to set another payment method if we wanted to. For example, stripe: \r\n <Form.Check\r\n    type='radio'\r\n    label='Stripe'\r\n    id='Stripe'\r\n    name='paymentMethod'\r\n    value='Stripe'\r\n    onChange={(e) => setPaymentMethod(e.target.value)}>\r\n</Form.Check>\r\n*/\r\n","import React, { useEffect } from 'react';\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { createOrder } from '../actions/orderActions';\r\nimport * as constants from '../constants/productConstants';\r\n\r\nconst PlaceOrderScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n\r\n  //Calculate prices\r\n  //we use reduce. cartItems is an array. You take the accumulator, add the item price and multiply the item qty, and then set zero as the start of the accumulator\r\n  const addDecimals = (num) => {\r\n    return (Math.round(num * 100) / 100).toFixed(2);\r\n  };\r\n\r\n  cart.itemsPrice = addDecimals(\r\n    cart.cartItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n  );\r\n  cart.shippingPrice = addDecimals(cart.itemsPrice > 100 ? 0 : 100);\r\n  cart.taxPrice = addDecimals(Number((0.15 * cart.itemsPrice).toFixed(2)));\r\n  cart.totalPrice = (\r\n    Number(cart.itemsPrice) +\r\n    Number(cart.shippingPrice) +\r\n    Number(cart.taxPrice)\r\n  ).toFixed(2);\r\n\r\n  //we want to bring in our order create state. once we dispatch an order using createOrder/placeOrderHandler it will send it all down through the state and we want to grab that.\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { order, success, error } = orderCreate;\r\n\r\n  useEffect(() => {\r\n    if (success) {\r\n      history.push(`/orders/${order._id}`);\r\n      dispatch({ type: constants.USER_DETAILS_RESET });\r\n      dispatch({ type: constants.ORDER_CREATE_RESET }); //part of the fix to stop users from seeing each others orders\r\n    }\r\n    //eslint stops the console telling you to put order._id in as a dependency. We don't want to do that because the id has not yet been created at this point. The database creates the id.\r\n    // eslint-disable-next-line\r\n  }, [history, success]);\r\n\r\n  const placeOrderHandler = () => {\r\n    dispatch(\r\n      createOrder({\r\n        orderItems: cart.cartItems,\r\n        shippingAddress: cart.shippingAddress,\r\n        paymentMethod: cart.paymentMethod,\r\n        itemsPrice: cart.itemsPrice,\r\n        shippingPrice: cart.shippingPrice,\r\n        taxPrice: cart.taxPrice,\r\n        totalPrice: cart.totalPrice,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {cart.shippingAddress.address}, {cart.shippingAddress.city}{' '}\r\n                {cart.shippingAddress.postalCode},{' '}\r\n                {cart.shippingAddress.country}\r\n              </p>\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <strong>Method: </strong>\r\n              {cart.paymentMethod}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {cart.cartItems.length === 0 ? (\r\n                <Message>Your cart is empty...</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {cart.cartItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x $ {item.price} = ${' '}\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>$ {cart.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>$ {cart.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>$ {cart.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>$ {cart.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                {error && <Message variant='danger'>{error}</Message>}\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Button\r\n                  type='button'\r\n                  className='btn-block'\r\n                  disabled={cart.cartItems === 0}\r\n                  onClick={placeOrderHandler}>\r\n                  Place Order\r\n                </Button>\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport {\r\n  getOrderDetails,\r\n  payOrder,\r\n  deliverOrder,\r\n} from '../actions/orderActions';\r\nimport * as constants from '../constants/productConstants';\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //we want to bring in our order from the database.\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  //we want to know if orderPay was a success.\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  //we want to know if orderDeliver was a success.\r\n  const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  //we want to bring in our user info so that we can tell who is an admin.\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    }\r\n\r\n    const addPayPalScript = async () => {\r\n      const { data: clientId } = await axios.get('/api/config/paypal');\r\n      const script = document.createElement('script');\r\n      script.type = 'text/javascript';\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      document.body.appendChild(script);\r\n    };\r\n\r\n    if (!order || successPay || successDeliver || order._id !== orderId) {\r\n      dispatch({ type: constants.ORDER_PAY_RESET });\r\n      dispatch({ type: constants.ORDER_DELIVER_RESET });\r\n      dispatch(getOrderDetails(orderId));\r\n    } else if (!order.isPaid) {\r\n      if (!window.paypal) {\r\n        addPayPalScript();\r\n      } else {\r\n        setSdkReady(true);\r\n      }\r\n    }\r\n  }, [order, orderId, dispatch, successPay, successDeliver, history, userInfo]); //any issues past lesson 82 consider deleting history and userInfo\r\n\r\n  if (!loading) {\r\n    const addDecimals = (num) => {\r\n      return (Math.round(num * 100) / 100).toFixed(2);\r\n    };\r\n\r\n    order.itemsPrice = addDecimals(\r\n      order.orderItems.reduce((acc, item) => acc + item.price * item.qty, 0)\r\n    );\r\n  }\r\n\r\n  const successPaymentHandler = (paymentResult) => {\r\n    console.log(paymentResult);\r\n    dispatch(payOrder(orderId, paymentResult));\r\n  };\r\n\r\n  const deliverHandler = () => {\r\n    dispatch(deliverOrder(order));\r\n  };\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant='danger'>{error}</Message>\r\n  ) : (\r\n    <>\r\n      <h1>Order {order._id}</h1>\r\n      <Row>\r\n        <Col md={8}>\r\n          <ListGroup variant='flush'>\r\n            <ListGroup.Item>\r\n              <h2>Shipping</h2>\r\n              <p>\r\n                <strong>Name: </strong> {order.user.name}\r\n              </p>\r\n              <p>\r\n                <strong>Email: </strong>\r\n                <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n              </p>\r\n              <p>\r\n                <strong>Address: </strong>\r\n                {order.shippingAddress.address}, {order.shippingAddress.city}{' '}\r\n                {order.shippingAddress.postalCode},{' '}\r\n                {order.shippingAddress.country}\r\n              </p>\r\n              {order.isDelivered ? (\r\n                <Message variant='success'>\r\n                  Delivered on {order.deliveredAt}\r\n                </Message>\r\n              ) : (\r\n                <Message variant='danger'>Not delivered</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Payment Method</h2>\r\n              <p>\r\n                <strong>Method: </strong>\r\n                {order.paymentMethod}\r\n              </p>\r\n              {order.isPaid ? (\r\n                <Message variant='success'>Paid on {order.paidAt}</Message>\r\n              ) : (\r\n                <Message variant='danger'>Not paid</Message>\r\n              )}\r\n            </ListGroup.Item>\r\n\r\n            <ListGroup.Item>\r\n              <h2>Order Items</h2>\r\n              {order.orderItems.length === 0 ? (\r\n                <Message>Order is empty...</Message>\r\n              ) : (\r\n                <ListGroup variant='flush'>\r\n                  {order.orderItems.map((item, index) => (\r\n                    <ListGroup.Item key={index}>\r\n                      <Row>\r\n                        <Col md={1}>\r\n                          <Image\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            fluid\r\n                            rounded\r\n                          />\r\n                        </Col>\r\n                        <Col>\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </Col>\r\n                        <Col md={4}>\r\n                          {item.qty} x $ {item.price} = ${' '}\r\n                          {(item.qty * item.price).toFixed(2)}\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  ))}\r\n                </ListGroup>\r\n              )}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Col>\r\n        <Col md={4}>\r\n          <Card>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Order Summary</h2>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>$ {order.itemsPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Shipping</Col>\r\n                  <Col>$ {order.shippingPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Items</Col>\r\n                  <Col>$ {order.taxPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              <ListGroup.Item>\r\n                <Row>\r\n                  <Col>Total</Col>\r\n                  <Col>$ {order.totalPrice}</Col>\r\n                </Row>\r\n              </ListGroup.Item>\r\n              {!order.isPaid && (\r\n                <ListGroup.Item>\r\n                  {loadingPay && <Loader />}\r\n                  {!sdkReady ? (\r\n                    <Loader />\r\n                  ) : (\r\n                    <PayPalButton\r\n                      amount={order.totalPrice}\r\n                      onSuccess={successPaymentHandler}\r\n                    />\r\n                  )}\r\n                </ListGroup.Item>\r\n              )}\r\n              {loadingDeliver && <Loader />}\r\n              {userInfo &&\r\n                userInfo.isAdmin &&\r\n                order.isPaid &&\r\n                !order.isDelivered && (\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type='button'\r\n                      className='btn btn-block'\r\n                      onClick={deliverHandler}>\r\n                      Mark as Delivered\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                )}\r\n            </ListGroup>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listUsers, deleteUser } from '../actions/userActions';\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  //getting the state that we need from the userListReducer\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  //getting the user login state that we need from the userListReducer\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  //we only need the success part of the state from user delete, as no payloads are being sent on success\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete } = userDelete;\r\n\r\n  //where we dispatch our action\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listUsers());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, userInfo, successDelete]); //we add successDelete because we want the useEffect to run again and for the list to reload if we delete a user.\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUser(id));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ADMIN</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user._id}>\r\n                <td>{user._id}</td>\r\n                <td>{user.name}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.isAdmin ? (\r\n                    <i className='fas fa-check' stype={{ color: 'green' }}></i>\r\n                  ) : (\r\n                    <i className='fas fa-times' stype={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button\r\n                    variant='danger'\r\n                    className='btn-sm'\r\n                    onClick={() => deleteHandler(user._id)}>\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUser } from '../actions/userActions';\r\nimport * as constants from '../constants/productConstants';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n\r\n  const [name, setName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [isAdmin, setisAdmin] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = userUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      //if successUpdate then we want to reset the user update state and then redirect to the user list\r\n      dispatch({ type: constants.USER_UPDATE_RESET });\r\n      history.push('/admin/userlist');\r\n    } else {\r\n      if (!user.name || user._id !== userId) {\r\n        //userId is coming from URL, we want to make sure that it matches the _.id, and if it does not we want to fetch the correct user.\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n        setisAdmin(user.isAdmin);\r\n      }\r\n    }\r\n  }, [dispatch, userId, user, successUpdate, history]);\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(updateUser({ _id: userId, name, email, isAdmin }));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control\r\n                type='email'\r\n                placeholder='enter email'\r\n                value={email}\r\n                onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId='isadmin'>\r\n              <Form.Check\r\n                type='checkbox'\r\n                label='Is Admin'\r\n                checked={isAdmin}\r\n                onChange={(e) => setisAdmin(e.target.checked)}></Form.Check>\r\n            </Form.Group>\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport Paginate from '../components/Paginate';\r\nimport {\r\n  listProducts,\r\n  deleteProduct,\r\n  createProduct,\r\n} from '../actions/productActions'; //reusing this action from the other product display (on homepage)\r\nimport * as constants from '../constants/productConstants';\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const pageNumber = match.params.pageNumber || 1;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  //getting the state that we need from the productListReducer\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, page, pages } = productList;\r\n\r\n  //getting the success, loading and error value from the product delete state from  productDeleteReducer\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const {\r\n    loading: loadingDelete,\r\n    error: errorDelete,\r\n    success: successDelete,\r\n  } = productDelete;\r\n\r\n  //getting the product, success, loading and error value from the productcreate state from  productCreateReducer\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const {\r\n    loading: loadingCreate,\r\n    error: errorCreate,\r\n    success: successCreate,\r\n    product: createdProduct,\r\n  } = productCreate;\r\n\r\n  //getting the user login state that we need from the userListReducer\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  //where we dispatch our action\r\n  useEffect(() => {\r\n    dispatch({ type: constants.PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo || !userInfo.isAdmin) {\r\n      history.push('/login');\r\n    }\r\n\r\n    if (successCreate) {\r\n      history.push(`/admin/product/${createdProduct._id}/edit`);\r\n    } else {\r\n      dispatch(listProducts('', pageNumber)); //listproducts action takes in a keyword and a page number (we don't want a keyword for the admin screen so just pass in an empty string)\r\n    }\r\n  }, [\r\n    dispatch,\r\n    history,\r\n    userInfo,\r\n    successDelete,\r\n    successCreate,\r\n    createdProduct,\r\n    pageNumber,\r\n  ]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProduct(id));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    dispatch(createProduct());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>BRAND</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products.map((product) => (\r\n                <tr key={product._id}>\r\n                  <td>{product._id}</td>\r\n                  <td>{product.name}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.category}</td>\r\n                  <td>{product.brand}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button\r\n                      variant='danger'\r\n                      className='btn-sm'\r\n                      onClick={() => deleteHandler(product._id)}>\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n          <Paginate pages={pages} page={page} isAdmin={true} />\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import axios from 'axios';\r\nimport React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { listProductDetails, updateProduct } from '../actions/productActions';\r\nimport * as constants from '../constants/productConstants';\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const [name, setName] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState('');\r\n  const [brand, setBrand] = useState('');\r\n  const [category, setCategory] = useState('');\r\n  const [countInStock, setCountInStock] = useState(0);\r\n  const [description, setDescription] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const {\r\n    loading: loadingUpdate,\r\n    error: errorUpdate,\r\n    success: successUpdate,\r\n  } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: constants.PRODUCT_UPDATE_RESET });\r\n      dispatch({ type: constants.PRODUCT_DETAILS_RESET });\r\n\r\n      history.push(`/admin/productlist`);\r\n    } else {\r\n      if (!product.name || product._id !== productId) {\r\n        dispatch(listProductDetails(productId));\r\n      } else {\r\n        setName(product.name);\r\n        setPrice(product.price);\r\n        setImage(product.image);\r\n        setBrand(product.brand);\r\n        setCategory(product.category);\r\n        setCountInStock(product.countInStock);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0]; //we pass in bracket zero because we are only uploading one file\r\n    const formData = new FormData(); //initialising a form data object (normal javascript)\r\n    formData.append('image', file); //pass in image just like we did in the backend, and then add the file\r\n    setUploading(true);\r\n    try {\r\n      //this bit is very similar to our actions\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data', //very important to sent content type for images\r\n        },\r\n      };\r\n      const { data } = await axios.post('/api/upload', formData, config); //posting to upload and then getting the form data\r\n      setImage(data); //setting the image to the data that comes back (which is the path)\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      updateProduct({\r\n        _id: productId,\r\n        name,\r\n        price,\r\n        image,\r\n        brand,\r\n        category,\r\n        description,\r\n        countInStock,\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-light my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit Product</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='name'>\r\n              <Form.Label>Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='enter name'\r\n                value={name}\r\n                onChange={(e) => setName(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='price'>\r\n              <Form.Label>Price</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='enter price'\r\n                value={price}\r\n                onChange={(e) => setPrice(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='image'>\r\n              <Form.Label>Image</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='Enter image url'\r\n                value={image}\r\n                onChange={(e) => setImage(e.target.value)}></Form.Control>\r\n              <Form.File\r\n                id='image-file'\r\n                label='Choose File'\r\n                custom\r\n                onChange={uploadFileHandler}></Form.File>\r\n              {uploading && <Loader />}\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='brand'>\r\n              <Form.Label>Brand</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='enter brand'\r\n                value={brand}\r\n                onChange={(e) => setBrand(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='category'>\r\n              <Form.Label>Category</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='enter category'\r\n                value={category}\r\n                onChange={(e) => setCategory(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='countInStock'>\r\n              <Form.Label>Count In Stock</Form.Label>\r\n              <Form.Control\r\n                type='number'\r\n                placeholder='enter count in stock'\r\n                value={countInStock}\r\n                onChange={(e) =>\r\n                  setCountInStock(e.target.value)\r\n                }></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='description'>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                placeholder='enter description'\r\n                value={description}\r\n                onChange={(e) => setDescription(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Button type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listOrders } from '../actions/orderActions';\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  //getting the state that we need from the orderListReducer\r\n  const orderList = useSelector((state) => state.orderList);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  //getting the user login state that we need from the orderListReducer\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  //where we dispatch our action\r\n  useEffect(() => {\r\n    if (userInfo && userInfo.isAdmin) {\r\n      dispatch(listOrders());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, userInfo]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USER</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order._id}>\r\n                <td>{order._id}</td>\r\n                <td>{order.user && order.user.name}</td>\r\n                <td>{order.createdAt.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>\r\n                  {order.isPaid ? (\r\n                    order.paidAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' stype={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  {order.isDelivered ? (\r\n                    order.deliveredAt.substring(0, 10)\r\n                  ) : (\r\n                    <i className='fas fa-times' stype={{ color: 'red' }}></i>\r\n                  )}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/orders/${order._id}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Container } from 'react-bootstrap';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport HomeScreen from './screens/HomeScreen';\nimport ProductScreen from './screens/ProductScreen';\nimport CartScreen from './screens/CartScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport ProfileScreen from './screens/ProfileScreen';\nimport ShippingScreen from './screens/ShippingScreen';\nimport PaymentScreen from './screens/PaymentScreen';\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\nimport OrderScreen from './screens/OrderScreen';\nimport UserListScreen from './screens/UserListScreen';\nimport UserEditScreen from './screens/UserEditScreen';\nimport ProductListScreen from './screens/ProductListScreen';\nimport ProductEditScreen from './screens/ProductEditScreen';\nimport OrderListScreen from './screens/OrderListScreen';\n\n/* 1. Exact is included in the HomeScreen route because we don't want it to apply to anything but the root folder '/'\n2. Cart has /:id? because we want id to be optional (so if you go to an empty cart you can get there)*/\n\nconst App = () => {\n  return (\n    <Router>\n      <Header />\n      <main className='py-3'>\n        <Container>\n          <Route path='/orders/:id' component={OrderScreen} />\n          <Route path='/shipping' component={ShippingScreen} />\n          <Route path='/payment' component={PaymentScreen} />\n          <Route path='/placeorder' component={PlaceOrderScreen} />\n          <Route path='/login' component={LoginScreen} />\n          <Route path='/register' component={RegisterScreen} />\n          <Route path='/profile' component={ProfileScreen} />\n          <Route path='/product/:id' component={ProductScreen} />\n          <Route path='/cart/:id?' component={CartScreen} />\n          <Route path='/admin/userlist' component={UserListScreen} />\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\n          <Route\n            path='/admin/productlist'\n            component={ProductListScreen}\n            exact\n          />\n          <Route\n            path='/admin/productlist/:pageNumber'\n            component={ProductListScreen}\n            exact\n          />\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\n          <Route path='/admin/orderlist' component={OrderListScreen} />\n          <Route path='/search/:keyword' component={HomeScreen} exact />\n          <Route path='/page/:pageNumber' component={HomeScreen} exact />\n          <Route\n            path='/search/:keyword/page/:pageNumber'\n            component={HomeScreen}\n            exact\n          />\n          <Route path='/' component={HomeScreen} exact />\n        </Container>\n      </main>\n      <Footer />\n    </Router>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}